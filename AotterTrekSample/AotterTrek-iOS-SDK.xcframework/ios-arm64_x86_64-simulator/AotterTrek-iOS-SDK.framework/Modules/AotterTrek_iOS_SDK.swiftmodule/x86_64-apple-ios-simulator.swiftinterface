// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AotterTrek_iOS_SDK
import AVFoundation
import AotterTrekSDKObjCHeader
import Foundation
import OMSDK_Aotternet
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public enum AdEventType : Swift.Int {
  case MUTE
  case UNMUTE
  case PAUSE
  case RESUME
  case REWIND
  case SKIP
  case START
  case FIRSTQUARTILE
  case MIDPOINT
  case THIRDQUARTILE
  case COMPLETE
  case LOADED
  case IMPRESSION
  case CLICK
  case CREATIVEVIEW
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum CheckTiming : Swift.Int {
  case One = 1
  case Two = 2
  case Three = 3
  case Four = 4
  case Five = 5
  case Six = 6
  case Seven = 7
  case TwentyNine = 29
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public protocol AdVideoViewDelegate {
  @objc func videoManager(videoView: AotterTrek_iOS_SDK.AdVideoView, didReceive event: AotterTrek_iOS_SDK.AdEventType)
  @objc func videoManager(videoView: AotterTrek_iOS_SDK.AdVideoView, didReceiveBufferChange isBufferPlayable: Swift.Bool)
  @objc func cuttentTime(time: Swift.Float64)
  @objc func receiveEventKey(eventKey: Swift.String, withUri eventUri: Swift.String)
  @objc func sendEventCompleted(eventUriString: Swift.String, withError error: Swift.String?)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class AdVideoView : UIKit.UIView, AotterTrek_iOS_SDK.DataManagerDelegate {
  @objc @_Concurrency.MainActor(unsafe) weak public var delegate: (any AotterTrek_iOS_SDK.AdVideoViewDelegate)?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
  @_Concurrency.MainActor(unsafe) public func sendAdEventCompleted(eventUri: Swift.String, withError error: Swift.String?)
}
extension AotterTrek_iOS_SDK.AdVideoView {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func requestVideoAd(vastTagURLString: Swift.String, omResList: [AotterTrekSDKObjCHeader.OMResource]? = nil)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func requestVideoAd(vastTagXML: Foundation.Data, omResList: [AotterTrekSDKObjCHeader.OMResource]? = nil)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func play()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func pause()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func mute()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func unmute()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func volumn() -> Swift.Float
  @objc @_Concurrency.MainActor(unsafe) dynamic public func duration() -> Swift.Float64
  @objc @_Concurrency.MainActor(unsafe) dynamic public func isVideoReady() -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) dynamic public func isVideoPlaying() -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) dynamic public func isBufferReady() -> Swift.Bool
}
extension AotterTrek_iOS_SDK.AdVideoView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
}
extension AotterTrek_iOS_SDK.AdVideoView {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func stopVideo()
}
extension AotterTrek_iOS_SDK.AdVideoView {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func addFriendlyObstruction(view: UIKit.UIView)
}
public protocol DataManagerDelegate : AnyObject {
  func sendAdEventCompleted(eventUri: Swift.String, withError error: Swift.String?)
}
@_inheritsConvenienceInitializers @objc public class TKValidatorHelper : ObjectiveC.NSObject {
  @objc public static func validateEmail(email: Swift.String) -> Swift.Bool
  @objc public static func validatePhone(phoneNumber: Swift.String) -> Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class TKImageDetector : ObjectiveC.NSObject {
  @objc public static func checkImageColorConsistency(image: UIKit.UIImage) -> Swift.Bool
  @objc public static func getImageWithColor(color: UIKit.UIColor) -> UIKit.UIImage
  @objc override dynamic public init()
  @objc deinit
}
extension AotterTrek_iOS_SDK.AdEventType : Swift.Equatable {}
extension AotterTrek_iOS_SDK.AdEventType : Swift.Hashable {}
extension AotterTrek_iOS_SDK.AdEventType : Swift.RawRepresentable {}
extension AotterTrek_iOS_SDK.CheckTiming : Swift.Equatable {}
extension AotterTrek_iOS_SDK.CheckTiming : Swift.Hashable {}
extension AotterTrek_iOS_SDK.CheckTiming : Swift.RawRepresentable {}
